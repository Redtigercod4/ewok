version: "3"

services:
  # ewok-ui:
  #   depends_on:
  #     - "ewok-api"
  #   build:
  #     context: ./ui
  #     dockerfile: Dockerfile
  #   container_name: ewok-web
  #   ports:
  #     - "80:80"
  #   environment:
  #     - FAST_REFRESH=false
  #   networks:
  #     - app-network

  # ewok-api:
  #   depends_on:
  #     ewok-db:
  #       condition: service_healthy
  #   build:
  #     context: ./api
  #     dockerfile: Dockerfile
  #   container_name: ewok-api
  #   ports:
  #     - "5000:5000"
  #   environment:
  #     - NODE_ENV=development
  #     - DATABASE_HOST=ewok-db
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=docker
  #     - POSTGRES_PORT=5432
  #     - POSTGRES_DB=ewok
  #   networks:
  #     - app-network

  ewok-db:
    image: postgres
    container_name: ewok-database
    restart: always
    environment:
      - DATABASE_HOST=127.0.0.1
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=docker
      - POSTGRES_PORT=5432
      - POSTGRES_DB=ewok
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pgdatasource:/var/lib/postgresql/data

networks:
  app-network:
    driver: bridge

volumes:
  pgdatasource:
